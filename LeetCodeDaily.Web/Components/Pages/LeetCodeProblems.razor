@page "/leetcode-problems"
@using LeetCodeDaily.Core.Models
@using LeetCodeDaily.Core.Services
@inject LeetCodeService LeetCodeService

<PageTitle>LeetCode Problems</PageTitle>

<div class="container mt-4">
    <h1>LeetCode Daily Problems</h1>

    <div class="row mt-4">
        @foreach (var problem in problems)
        {
            <div class="col-md-6 mb-4">
                <div class="card h-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <h5 class="card-title mb-0">@problem.QuestionFrontendId. @problem.Title</h5>
                            <span class="badge @GetDifficultyBadgeClass(problem.Difficulty)">@problem.Difficulty</span>
                        </div>
                        
                        @if (!string.IsNullOrEmpty(problem.TranslatedTitle))
                        {
                            <h6 class="card-subtitle mb-2 text-muted">@problem.TranslatedTitle</h6>
                        }

                        <div class="mb-3">
                            @foreach (var tag in problem.TopicTags)
                            {
                                <span class="badge bg-secondary me-1">@tag.Name</span>
                            }
                        </div>

                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <small class="text-muted">Acceptance Rate: @(problem.AcRate.ToString("P2"))</small>
                            </div>
                            <a href="@($"leetcode-problem/{problem.Id}")" class="btn btn-primary">View Details</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    private List<LeetCodeProblem> problems = new();

    protected override void OnInitialized()
    {
        problems = LeetCodeService.GetAllProblems().ToList();
    }

    private string GetDifficultyBadgeClass(string difficulty) => difficulty.ToLower() switch
    {
        "easy" => "bg-success",
        "medium" => "bg-warning",
        "hard" => "bg-danger",
        _ => "bg-secondary"
    };
} 