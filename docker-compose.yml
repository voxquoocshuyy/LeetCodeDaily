version: '3.8'

services:
  leetcodedaily:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: daily-leetcodedaily
    ports:
      - "8080:80"
    volumes:
      - ./Solutions:/app/Solutions
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
    restart: unless-stopped

  elasticsearch:
    image: elasticsearch:7.17.0
    container_name: daily-elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=true
      - xpack.monitoring.collection.enabled=true
      - xpack.monitoring.elasticsearch.collection.enabled=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elk
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200 >/dev/null || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    image: kibana:7.17.0
    container_name: daily-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://daily-elasticsearch:9200
      - ELASTICSEARCH_URL=http://daily-elasticsearch:9200
      - XPACK_SECURITY_ENABLED=false
      - XPACK_MONITORING_UI_CONTAINER_ELASTICSEARCH_ENABLED=true
      - XPACK_MONITORING_ENABLED=true
      - XPACK_MONITORING_UI_ENABLED=true
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elk
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:5601 >/dev/null || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  elasticsearch-data:
    driver: local

networks:
  elk:
    driver: bridge 